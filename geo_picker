#!/usr/bin/env perl
use Mojolicious::Lite -signatures;
use Mojo::Redis;
use Digest::MD5;
use DDP;

use constant {
  OSM_API => 'https://overpass-api.de/api/interpreter',
};

helper digest => sub {
  state $h = Digest::MD5->new();
};

helper db => sub { 
  state $redis = Mojo::Redis->new->db;
};

helper query_osm => sub ($c, $geom) {
  # coordinates is giving as [ long, lat ]
  my @coordinates = @{$geom->{geometry}->{coordinates}->[0]};
  my @sorted
    = sort { $a->[0] <=> $b->[0] and $a->[1] <=> $b->[1] } @coordinates;
  my $bottom = shift @sorted;
  my $upper  = pop @sorted;

  # osm query requires [ lat, long ]
  my $str   = join(',', reverse(@$bottom), reverse(@$upper));
  my $query = <<EOQ;
[out:json];
node
  [amenity=school]
  ($str);
out;
EOQ

  # check redis first
  my $res = undef;
  my $key = $c->digest->add($query)->digest();
  $res = $c->db->get($key);
  return $res if $res;

  # not found: get from osm server
  $c->app->log->debug('Getting from OSM');

  $res = $c->app->ua->post(
    OSM_API() => {Accept => '*/*'} => form => {data => $query} )->res;

  if ( $res->is_success ) {
    $c->db->set($key, $res->body) if $key;
    return $res->body;
  } else {
    return $res->message;
  }
};

helper settings => sub( $c ) {

  # TODO: loop through routes and set path to their route names
  return {
    path => {
      url  => $c->url_for('root')->to_abs,
      bbox => $c->url_for('bbox')->to_abs,
    },
  };
};

# receive boundbox returning consuting query
post 'geo/bbox' => sub ( $c ) {
  # TODO: subprocess the bound box
  my $geojson = $c->req->json;
  my $res     = $c->query_osm($geojson);

  $res ?  $c->render( json => $res ) :
	  $c->render( text => "Error getting values", code => 503 );
} => 'bbox';

# index
get '/' => sub ( $c ) {
  $c->render(template => 'index', settings => $c->settings);
} => 'root';

app->start;

__DATA__

@@ index.html.ep
% use Mojo::JSON qw(to_json);
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset='utf-8'>
		<meta name='viewport' content='width=device-width,initial-scale=1'>

		<title>Svelte app</title>
		<link rel='icon' type='image/png' href='/favicon.png'>
		<link rel='stylesheet' href='/global.css'>
		<link rel='stylesheet' href='/build/bundle.css'>

        <script>window.__app_settings = <%== to_json $settings %> </script>
		<script defer src='/build/bundle.js'></script>
	</head>

	<body>
	</body>
</html>
